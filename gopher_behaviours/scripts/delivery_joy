#!/usr/bin/env python

import rospy
import gopher_configuration
import std_msgs.msg as std_msgs
import gopher_std_msgs.msg as gopher_msgs
import gopher_behaviours

class DeliveryJoy():
    def __init__(self):
        self.config = gopher_configuration.Configuration()
        self.go_sub = rospy.Subscriber(self.config.buttons.go, std_msgs.Empty, self.go_cb)
        self.delivery_status_sub = rospy.Subscriber('/gopher_deliveries/status', gopher_msgs.DeliveryManagerStatus, self.delivery_status_cb)
        self.locations = rospy.get_param('~locations') # assumed to be a list of strings
        self.disable_begin_end = rospy.get_param('~disable_begin_end_behaviours')
        self.cycle_door = rospy.get_param('~cycle_door')
        rospy.loginfo("Delivery Joy : Joystick start button will run the delivery " + " -> ".join(self.locations))
        self.express_delivery = gopher_behaviours.scripts.deliveries.ExpressDelivery()

    def delivery_status_cb(self, status):
        self.delivering = status == gopher_msgs.DeliveryManagerStatus.DELIVERING
        
    def go_cb(self, go):
        if not self.delivering:
            rospy.loginfo("Delivery Joy : Gopher wasn't delivering, and received start button. Sending locations to delivery manager.")
            express_delivery.send(self.locations, self.disable_begin_end, self.cycle_door)
            express_delivery.spin()
            rospy.loginfo("Delivery Joy : Finished a delivery.")

if __name__ == '__main__':
    rospy.init_node("delivery_joy", log_level=rospy.INFO)
    joy = DeliveryJoy()
