<!--
  Launches gopher mind control.

  Eventually as part of the rapp
 -->
<launch>
  <!--
    If we get too much customisation happening here, think about providing:
     - a configuration service for the node (dynamic reconfigure?)
     - call on the dynamic reconfigure software to retune the delivery manager at launch time
     - call on rqt/create an interaction to retune the delivery manager at runtime
   -->
  <arg name="express" default="false"  doc="dont wait at each location for the user to press the button."/>
  <arg name="parking" default="false"  doc="make sure all deliveries do parking/docking."/>
  <arg name="debug"   default="false"  doc="debug mode logging of behaviours."/>
  <arg name="elf"     default="teleop" doc="specify the elf behaviour to run [teleop, ar])"/>

  <group ns="behaviours">
    <param name="deliveries/debug" value="$(arg debug)"/>
    <node name="splintered_reality" type="splintered_reality.py" pkg="gopher_behaviours">
      <param name="express"                       value="$(arg express)"/>
      <param name="parking"                       value="$(arg parking)"/>
      <param name="elf"                           value="$(arg elf)"/>
    </node>
    <include file="$(find gopher_behaviours)/launch/custom_delivery_overseer.launch"/>
  </group>
</launch>
