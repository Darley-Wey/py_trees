#!/usr/bin/env python
#
# License: BSD
#   https://raw.github.com/yujinrobot/gopher_crazy_hospital/license/LICENSE
#
##############################################################################
# Documentation
##############################################################################
"""
Simple test program for py trees
"""
##############################################################################
# Imports
##############################################################################


##############################################################################
# Methods
##############################################################################


class Behaviour(object):
    def __init__(self, name):
        self.name = name

    def update(self):
        print("  %s: update" % self.name)

    def __repr__(self):
        return self.name


def create_behaviour(func):
    class_name = func.__name__.capitalize()
    #globals()[class_name] = type(class_name, (Behaviour,), dict(update=func))
    return type(class_name, (Behaviour,), dict(update=func))


def success(self):
    print("Success %s" % self.name)

Success = create_behaviour(success)


def invert(func):
    def wrapped(*args, **kwargs):
        status = func(*args, **kwargs)
        return not status
    return wrapped


def class_inverter(cls):
    update = getattr(cls, "update")
    setattr(cls, "update", invert(update))
    return cls


class Foo(object):
    def __init__(self, name):
        self.name = name

    def update(self):
        print("Foo: %s" % self.name)
        return True


@class_inverter
class Bar(Foo):
    pass

##############################################################################
# Main
##############################################################################

if __name__ == '__main__':
    #Success = create_behaviour(success)
    s = Success(name='dude')
    print("Name: %s" % s.name)
    s.update()

    bar = Bar("Bar")
    print("Result: %s" % bar.update())

    foobar = class_inverter(Foo("FooBar"))
    print("Result: %s" % foobar.update())
